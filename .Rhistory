library(readr)
root_url <- 'https://raw.githubusercontent.com/'
intermediate <- 'rfordatascience/tidytuesday/master/data/2022/2022-11-29/'
wcmatches <- read_csv(paste0(root_url, intermediate, 'wcmatches.csv'))
worldcups <- read_csv(paste0(root_url, intermediate, 'worldcups.csv'))
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
View(worldcups_tidy)
View(wcmatches_tidy)
library(ggplot2)
library(forcats)
wcmatches_home_better <- wcmatches_tidy %>%
filter(home_score > away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(total_home_points = n() * 3) %>%
rename(team = home_team)
wcmatches_away_better <- wcmatches_tidy %>%
filter(away_score > home_score) %>%
select(away_team) %>%
group_by(away_team) %>%
summarize(total_away_points = n() * 3) %>%
rename(team = away_team)
wcmatches_draw_games_1 <- wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(home_draw_points = n())
wcmatches_draw_games_2 <- wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(away_team) %>%
group_by(away_team) %>%
summarize(away_draw_points = n())
wcmatches_draw <- wcmatches_draw_games_1 %>%
full_join(wcmatches_draw_games_2, by = c("home_team" = "away_team")) %>%
mutate(home_draw_points = replace_na(home_draw_points, 0),
away_draw_points = replace_na(away_draw_points, 0),
total_draw_points = home_draw_points + away_draw_points) %>%
rename(team = home_team) %>%
select(team, total_draw_points)
wcmatches_tabulated <- wcmatches_home_better %>%
full_join(wcmatches_away_better, by = "team") %>%
full_join(wcmatches_draw, by = "team") %>%
mutate(total_home_points = replace_na(total_home_points, 0),
total_away_points = replace_na(total_away_points, 0),
total_draw_points = replace_na(total_draw_points, 0),
final_score = total_home_points + total_away_points + total_draw_points) %>%
select(team, final_score) %>%
arrange(desc(final_score)) %>%
head(10)
ggplot(wcmatches_tabulated, aes(x = fct_reorder(team, final_score, .desc = TRUE), y = final_score)) +
geom_col(fill = "red") +
labs(x = "Country", y = "Grand Total Score", title = "Top 10 Best Performing Countries In World Cup") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(label = wcmatches_tabulated$final_score, size = 5, position = position_stack(vjust = 0.5))
View(wcmatches)
View(wcmatches_home_better)
View(wcmatches_away_better)
View(wcmatches_draw_games_1)
wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(home_team) %>%
group_by(home_team)
wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(home_draw_points = n())
wcmatches_tidy %>%
filter(home_score == away_score)
wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(home_team)
wcmatches_draw_games_1 %>%
full_join(wcmatches_draw_games_2, by = c("home_team" = "away_team")) %>%
mutate(home_draw_points = replace_na(home_draw_points, 0),
away_draw_points = replace_na(away_draw_points, 0),
total_draw_points = home_draw_points + away_draw_points) %>%
rename(team = home_team) %>%
select(team, total_draw_points)
wcmatches_home_better %>%
full_join(wcmatches_away_better, by = "team") %>%
full_join(wcmatches_draw, by = "team") %>%
mutate(total_home_points = replace_na(total_home_points, 0),
total_away_points = replace_na(total_away_points, 0),
total_draw_points = replace_na(total_draw_points, 0),
final_score = total_home_points + total_away_points + total_draw_points) %>%
select(team, final_score) %>%
arrange(desc(final_score))
library(ggplot2)
library(forcats)
wcmatches_home_better <- wcmatches_tidy %>%
filter(home_score > away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(total_home_points = n() * 3) %>%
rename(team = home_team)
wcmatches_away_better <- wcmatches_tidy %>%
filter(away_score > home_score) %>%
select(away_team) %>%
group_by(away_team) %>%
summarize(total_away_points = n() * 3) %>%
rename(team = away_team)
wcmatches_draw_games_1 <- wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(home_draw_points = n())
wcmatches_draw_games_2 <- wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(away_team) %>%
group_by(away_team) %>%
summarize(away_draw_points = n())
wcmatches_draw <- wcmatches_draw_games_1 %>%
full_join(wcmatches_draw_games_2, by = c("home_team" = "away_team")) %>%
mutate(home_draw_points = replace_na(home_draw_points, 0),
away_draw_points = replace_na(away_draw_points, 0),
total_draw_points = home_draw_points + away_draw_points) %>%
rename(team = home_team) %>%
select(team, total_draw_points)
wcmatches_tabulated <- wcmatches_home_better %>%
full_join(wcmatches_away_better, by = "team") %>%
full_join(wcmatches_draw, by = "team") %>%
mutate(total_home_points = replace_na(total_home_points, 0),
total_away_points = replace_na(total_away_points, 0),
total_draw_points = replace_na(total_draw_points, 0),
final_score = total_home_points + total_away_points + total_draw_points) %>%
select(team, final_score) %>%
arrange(desc(final_score)) %>%
head(10)
ggplot(wcmatches_tabulated, aes(x = fct_reorder(team, final_score, .desc = TRUE), y = final_score)) +
geom_col(fill = "red") +
labs(x = "Country", y = "Grand Total Score", title = "Top 10 Best Performing Countries In World Cup") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(label = wcmatches_tabulated$final_score, size = 5, position = position_stack(vjust = 0.5))
View(worldcups_tidy)
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain", "Yugoslavia", "Czechoslovakia") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name))
worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain", "Yugoslavia", "Czechoslovakia") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
library(readr)
root_url <- 'https://raw.githubusercontent.com/'
intermediate <- 'rfordatascience/tidytuesday/master/data/2022/2022-11-29/'
wcmatches <- read_csv(paste0(root_url, intermediate, 'wcmatches.csv'))
worldcups <- read_csv(paste0(root_url, intermediate, 'worldcups.csv'))
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
worldcups_test <- worldcups %>%
count(host_country)
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
worldcups_test <- worldcups %>%
count(host_country)
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
worldcups_test <- worldcups %>%
count(worldcups$host_country)
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
worldcups_test
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
worldcups_test <- worldcups %>%
count(worldcups, host_country, sort = TRUE)
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>%
mutate(continent = case_when(
host_country %in% c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States") ~ "Americas",
host_country %in% c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain") ~ "Europe",
host_country %in% c("South Africa", "Russia", "Japan, South Korea") ~ "Rest Of World"))
worldcups_test <- worldcups %>%
count(host_country, sort = TRUE)
worldcups_test <- count(worldcups, host_country, sort = TRUE)
worldcups_test <- count(worldcups, sort = TRUE)
worldcups_test
head(worldcups)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>% count(worldcups, host_country, sort = TRUE)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>% count(host_country, sort = TRUE)
worldcups_tidy
library(tidyverse)
library(stringr)
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>% count(country_name, sort = TRUE)
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
worldcups_tidy
print(n=25)
print(worldcups_tidy, n = 25)
library(tidyverse)
library(stringr)
americas <- c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States")
europe <- c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain", "West Germany", "Netherlands", "Austria", "Belgium", "Croatia", "Czechoslovakia", "Hungary", "Poland", "Portugal", "Yugoslavia", "Bulgaria", "Soviet Union", "Turkey", "Russia")
others <- c("South Africa", "Japan", "South Korea", "Japan, South Korea")
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>% mutate(host_continent = case_when(
host_country %in% americas ~ "Americas",
host_country %in% europe ~ "Europe",
host_country %in%  ~ "Rest Of World"))
library(tidyverse)
library(stringr)
americas <- c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States")
europe <- c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain", "West Germany", "Netherlands", "Austria", "Belgium", "Croatia", "Czechoslovakia", "Hungary", "Poland", "Portugal", "Yugoslavia", "Bulgaria", "Soviet Union", "Turkey", "Russia")
others <- c("South Africa", "Japan", "South Korea", "Japan, South Korea")
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>% mutate(host_continent = case_when(
host_country %in% americas ~ "Americas",
host_country %in% europe ~ "Europe",
host_country %in%  others ~ "Rest Of World"))
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
library(tidyverse)
library(stringr)
americas <- c("Uruguay", "Brazil", "Chile", "Mexico", "Argentina", "United States")
europe <- c("Italy", "France", "Switzerland", "Sweden", "England", "Germany", "Spain", "West Germany", "Netherlands", "Austria", "Belgium", "Croatia", "Czechoslovakia", "Hungary", "Poland", "Portugal", "Yugoslavia", "Bulgaria", "Soviet Union", "Turkey", "Russia")
others <- c("South Africa", "Japan", "South Korea", "Japan, South Korea")
worldcups_tidy <- worldcups %>%
pivot_longer(winner:fourth, names_to = "position_status", values_to = "country_name") %>%
rename(host_country = host) %>%
mutate(host_country = ifelse(host_country == "USA", "United States", host_country),
country_name = ifelse(country_name == "USA", "United States", country_name)) %>% mutate(host_continent = case_when(
host_country %in% americas ~ "Americas",
host_country %in% europe ~ "Europe",
host_country %in%  others ~ "Rest Of World"),
country_continent = case_when(
country_name %in% americas ~ "Americas",
country_name %in% europe ~ "Europe",
country_name %in%  others ~ "Rest Of World"))
wcmatches_tidy <- wcmatches %>%
rename(stage_status = stage, win_outcome = outcome) %>%
mutate(stage_status = ifelse(str_detect(stage_status, "Group"), "Group Stage", stage_status),
stage_status = ifelse(stage_status == "Final Round", "Finals", stage_status)) %>%
select(-date) %>%
mutate(win_outcome = case_when(
win_outcome == "H" ~ "Home",
win_outcome == "D" ~ "Draw",
win_outcome == "A" ~ "Away")) %>%
mutate(score_difference = abs(home_score - away_score),
win_conditions = replace_na(win_conditions, "Nil"),
after_extra_time = ifelse(str_detect(win_conditions, "AET"), 1, 0),
penalties = ifelse(str_detect(win_conditions, "penalties"), 1, 0))
worldcups_tidy
country_name[host_continent:]
country_name$country_continent
"test"[1:]
[1]
"test"[1]
worldcups_tidy$country_continent
library(ggplot2)
library(forcats)
# For Cases 1 and 3, where the Home Score > Away Score. In these cases, we select the Home Teams and count the number of times each country has appeared. Since 3 points will be allocated for each win, we should multiply the number of observations by 3 after the n() function.
wcmatches_home_better <- wcmatches_tidy %>%
filter(home_score > away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(total_home_points = n() * 3) %>%
rename(team = home_team)
# For Cases 2 and 4, where the Away Score > Home Score. In these cases, we select the Away Teams and count the number of times each country has appeared. Since 3 points will be allocated for each win, we should multiply the number of observations by 3 after the n() function.
wcmatches_away_better <- wcmatches_tidy %>%
filter(away_score > home_score) %>%
select(away_team) %>%
group_by(away_team) %>%
summarize(total_away_points = n() * 3) %>%
rename(team = away_team)
# For Case 5. These are the cases where Away Score = Home Score even after extra time. In this case, we need to select both the Home Team and the Away Team. I have split the draw matches into two sets, one set containing the Home Team countries and the other set containing the Away Team countries. Calculate the points for the draw matches accordingly. Since only 1 point will be allocated for each draw to each team, we just need to use n().
wcmatches_draw_games_1 <- wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(home_team) %>%
group_by(home_team) %>%
summarize(home_draw_points = n())
wcmatches_draw_games_2 <- wcmatches_tidy %>%
filter(home_score == away_score) %>%
select(away_team) %>%
group_by(away_team) %>%
summarize(away_draw_points = n())
# Join the two datasets containing the Home Teams and Away Teams respectively to obtain a dataset that contains the points for each scenerio (where the country is acting as a Home Team and Away Team). We need to use a full_join to join the datasets as we do not want any loss of observations from either dataset. Those observations that are not in one dataset will be denoted by NA when merged, hence need to change the value from NA to 0. Next, create a new variable that sums up the points for the country acting as Home Team and Away Team.
wcmatches_draw <- wcmatches_draw_games_1 %>%
full_join(wcmatches_draw_games_2, by = c("home_team" = "away_team")) %>%
mutate(home_draw_points = replace_na(home_draw_points, 0),
away_draw_points = replace_na(away_draw_points, 0),
total_draw_points = home_draw_points + away_draw_points) %>%
rename(team = home_team) %>%
select(team, total_draw_points)
# Afterwards, join the three datasets (points for Home Team Win, points for Away Team Win and points for Draw Matches), again using a full_join to prevent any loss of observations. Similarly, observations that are not in one or more datasets will be denoted by NA when merged, hence need to change the value from NA to 0. Next, create a new variable that sums up the home points, away points and draw points. Use head(10) to filter the top 10 best performing countries after applying the arrange function in descending order of the final score.
wcmatches_tabulated <- wcmatches_home_better %>%
full_join(wcmatches_away_better, by = "team") %>%
full_join(wcmatches_draw, by = "team") %>%
mutate(total_home_points = replace_na(total_home_points, 0),
total_away_points = replace_na(total_away_points, 0),
total_draw_points = replace_na(total_draw_points, 0),
final_score = total_home_points + total_away_points + total_draw_points) %>%
select(team, final_score) %>%
arrange(desc(final_score)) %>%
head(10)
# Create a bar plot
ggplot(wcmatches_tabulated, aes(x = fct_reorder(team, final_score, .desc = TRUE), y = final_score)) +
geom_col(fill = "red") +
labs(x = "Country", y = "Grand Total Score", title = "Top 10 Best Performing Countries In World Cup") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(label = wcmatches_tabulated$final_score, size = 5, position = position_stack(vjust = 0.5)) +
theme(axis.text.x = element_text(size = 7))
